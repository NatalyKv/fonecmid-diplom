
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// ++ Начало.Квитко 12.09.25
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		КоличествоЭлементов = ПроверяемыеРеквизиты.ВГраница();
		Для Сч=0 ПО КоличествоЭлементов Цикл
			ЭлементМассива = ПроверяемыеРеквизиты[Сч];
			Если ЭлементМассива = "Основание" Тогда
				ПроверяемыеРеквизиты.Удалить(Сч);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	// -- Конец.Квитко 12.09.25
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	// ++ Начало.Квитко 26.09.25	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	
	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		
		// регистр ВКМ_АктыПоВыполненнымРаботам Расход	
		Движения.ВКМ_АктыПоВыполненнымРаботам.Записывать = Истина;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслугУслуги.Сумма КАК Сумма,
		               |	РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		               |ГДЕ
		               |	РеализацияТоваровУслугУслуги.Номенклатура = &Номенклатура
		               |	И РеализацияТоваровУслугУслуги.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Номенклатура", Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить());
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Движение = Движения.ВКМ_АктыПоВыполненнымРаботам.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Клиент = Контрагент;
			Движение.Договор = Договор;
			Движение.Сумма = Выборка.Сумма;
		КонецЕсли;
		
	КонецЕсли;
	// -- Конец.Квитко 12.09.25
   
КонецПроцедуры  

Процедура ВыполнитьАвтозаполнение() Экспорт
	
	// ++ Начало.Квитко 12.09.25
	АбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	РаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НЕ ЗначениеЗаполнено(АбонентскаяПлата) ИЛИ НЕ ЗначениеЗаполнено(РаботыСпециалиста) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не заполнены значения номенклатуры для типа договора Абоненсткое обслуживание!");
	    Возврат;
	КонецЕсли;
	
	Товары.Очистить();
	Услуги.Очистить();
	
	СуммаАбонентскойПлаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
	Если ЗначениеЗаполнено(СуммаАбонентскойПлаты) Тогда
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = АбонентскаяПлата;
		НоваяСтрока.Сумма = СуммаАбонентскойПлаты;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = СуммаАбонентскойПлаты;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот КАК КоличествоЧасов,
	               |	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплате
	               |ИЗ
	               |	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоМесяца, &КонецМесяца, , Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
	    НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = РаботыСпециалиста;
		НоваяСтрока.Количество = Выборка.КоличествоЧасов;
		НоваяСтрока.Сумма = Выборка.СуммаКОплате;
		Если Выборка.КоличествоЧасов <> 0 Тогда
		НоваяСтрока.Цена = Выборка.СуммаКОплате / Выборка.КоличествоЧасов;
		КонецЕсли;
	КонецЕсли;  
	
	СуммаДокумента = Услуги.Итог("Сумма");
	// -- Конец.Квитко 12.09.25
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
