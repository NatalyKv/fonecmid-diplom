
 #Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры 

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников
 
 &НаКлиенте
 Процедура ОтпускаСотрудниковПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования) 
	 
	 Сотрудник = Элемент.ТекущиеДанные.Сотрудник;
	 Элемент.ТекущиеДанные.КоличествоДней = Окр((КонецДня(Элемент.ТекущиеДанные.ДатаОкончания) - Элемент.ТекущиеДанные.ДатаНачала) / 86400);
	 ПараметрыОтбора = Новый Структура;
	 ПараметрыОтбора.Вставить("Сотрудник", Сотрудник);
	 СтрокиССотрудником = Объект.ОтпускаСотрудников.НайтиСтроки(ПараметрыОтбора);
	
	 Если СтрокиССотрудником.Количество() > 1 Тогда
		 
		 КоличествоДней = 0;
		 
		 Для Каждого Строка ИЗ СтрокиССотрудником Цикл
			 ДнейВСтроке = Окр((КонецДня(Строка.ДатаОкончания) - Строка.ДатаНачала) / 86400);
			 КоличествоДней = КоличествоДней + ДнейВСтроке; 
		 КонецЦикла;
		 
		 Для Каждого Строка ИЗ СтрокиССотрудником Цикл
			 Строка.КоличествоДней = КоличествоДней;
		 КонецЦикла;
		 
	 КонецЕсли;	
	 
 КонецПроцедуры 
 
 #КонецОбласти

 #Область ОбработчикиКомандФормы
 
 &НаКлиенте
 Процедура ПоказатьГрафик(Команда)
	 
	 Адрес = АдресВоВремнномХранилище();
	 
	 ПараметрыФормы = Новый Структура;
	 ПараметрыФормы.Вставить("Адрес", Адрес);
	 
	 ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", ПараметрыФормы, ЭтотОбъект);
	 
 КонецПроцедуры
 
 #КонецОбласти

#Область СлужебныеПроцедурыИФункции  
   
 &НаСервере
 Функция АдресВоВремнномХранилище() 
	 
	 ДанныеОбОтпусках = Объект.ОтпускаСотрудников.Выгрузить();
	 Возврат ПоместитьВоВременноеХранилище(ДанныеОбОтпусках, УникальныйИдентификатор);
	 
 КонецФункции
 
#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
