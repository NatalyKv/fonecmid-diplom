 
 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
 
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	СформироватьДвижения();
	РассчитатьОклад();
	РассчитатьОтпуск();
	РассчитатьПроцентОтПродаж();
	РассчитатьНДФЛ();
	СформироватьДвиженияПоРегиструВзаиморасчетыССотрудниками();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	Запрос = Новый Запрос; 
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗарплатыНачисления.Категория КАК Категория,
	|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|				&Дата,
	|				(Сотрудник, Категория) В
	|					(ВЫБРАТЬ
	|						ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|						ВКМ_НачислениеЗарплатыНачисления.Категория КАК Категория
	|					ИЗ
	|						Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|					ГДЕ
	|						ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_НачислениеЗарплатыНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|			И ВКМ_НачислениеЗарплатыНачисления.Категория = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Категория
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Дата",Дата);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	СписокСотрудниковДляРасчетаНДФЛ = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = Выборка.ДатаОкончания; 
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.Категория = Выборка.Категория;
			Движение.Размер = Выборка.Оклад;
			
			Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
				Движение.ДнейВОтпуске = Окр((КонецДня(Выборка.ДатаОкончания) - Выборка.ДатаНачала) / 86400);
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаНачала, -12));
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ДатаОкончания, -1));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТипЗнч(Выборка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ДополнительныеНачисления") Тогда
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.Категория = Выборка.Категория;
			Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентПродаж Тогда
				Движение.Размер = Выборка.ПроцентОтРабот;
			КонецЕсли;
			
		КонецЕсли;
		
		СотрудникВСписке = СписокСотрудниковДляРасчетаНДФЛ.Найти(Выборка.Сотрудник);
		Если СотрудникВСписке = Неопределено Тогда
			СписокСотрудниковДляРасчетаНДФЛ.Добавить(Выборка.Сотрудник);
		КонецЕсли;
		
	КонецЦикла; 
	
	Для Каждого Сотрудник ИЗ СписокСотрудниковДляРасчетаНДФЛ Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата); 
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры   

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисленияДанныеГрафика.Размер КАК Размер,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК ЗначениеПериодДействия,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ЗначениеФактическийПериодДействия
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			ВидРасчета = &ВидРасчета
	|				И Регистратор = &Ссылка) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.Размер / Выборка.ЗначениеПериодДействия * Выборка.ЗначениеФактическийПериодДействия;
		Движение.РабочихДней = Выборка.ЗначениеПериодДействия;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры 

Процедура РассчитатьОтпуск()
	
	Движения.ВКМ_ДниВОтпуске.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РабочихДнейБаза, 0) КАК РабочихДнейБаза,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |				&Измерения,
	               |				&Измерения,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	               |				&Измерения,
	               |				&Измерения,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Категория");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Если Выборка.РабочихДнейБаза <> 0 Тогда
			Движение.Результат = (Выборка.БазаОсн + Выборка.БазаДоп) * Движение.ДнейВОтпуске / Выборка.РабочихДнейБаза;	 
		КонецЕсли;
		Движение.Размер = Выборка.БазаОсн + Выборка.БазаДоп;
	

	    ДвижениеОтпуск = Движения.ВКМ_ДниВОтпуске.ДобавитьРасход();
		ДвижениеОтпуск.Период = Движение.ПериодДействияНачало;
		ДвижениеОтпуск.Сотрудник = Движение.Сотрудник;
		ДвижениеОтпуск.ДнейВОтпуске = Движение.ДнейВОтпуске;	
	КонецЦикла;
	
	 Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьПроцентОтПродаж()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот,
	               |	ВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
	               |				&НачалоПериода,
	               |				&КонецПериода,
	               |				Месяц,
	               |				Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник
	               |					ИЗ
	               |						Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	               |					ГДЕ
	               |						ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	               |		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	               |	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ВидРасчета";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентПродаж);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.СуммаКОплатеОборот;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета"; 
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Результат = (Выборка.БазаОсн + Выборка.БазаДоп) * 13 / 100;
		Движение.Размер = Выборка.БазаОсн + Выборка.БазаДоп; 
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры 

Процедура СформироватьДвиженияПоРегиструВзаиморасчетыССотрудниками() 
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат
	               |ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ОсновныеНачисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК Результат
	               |ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ДополнительныеНачисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_Удержания.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_Удержания.Результат) КАК Результат
	               |ПОМЕСТИТЬ ВТ_Удержания
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_Удержания.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	ЕСТЬNULL(ВТ_ОсновныеНачисления.Результат, 0) + ЕСТЬNULL(ВТ_ДополнительныеНачисления.Результат, 0) КАК Сумма,
	               |	ВТ_Удержания.Результат КАК СуммаУдерж
	               |ИЗ
	               |	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
	               |		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_ДополнительныеНачисления.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	               |		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_Удержания.Сотрудник";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
        
        Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма - Выборка.СуммаУдерж;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


