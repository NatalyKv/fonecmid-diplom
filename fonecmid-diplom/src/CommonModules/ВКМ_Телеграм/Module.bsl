
#Область ПрограммныйИнтерфейс 

// Отправляет уведомление в группу Телеграм, если измененились данные по планируемым работам в документе ВКМ_Обслуживание клиента 
// и в справочнике ВКМ_УведомленияТелеграмБоту содержится сообщение об изменениях.
// После отправки удаляет сообщение из справочника.
//
Процедура  ОтправитьУведомленияВТелеграм() Экспорт 
		
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ВКМ_УведомленияТелеграмБоту.Ссылка КАК Ссылка,
	                |	ВКМ_УведомленияТелеграмБоту.ТекстСообщения КАК ТекстСообщения
	                |ИЗ
	                |	Справочник.ВКМ_УведомленияТелеграмБоту КАК ВКМ_УведомленияТелеграмБоту";
	
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 Если Уведомление(Выборка.ТекстСообщения) Тогда
			Элемент = Выборка.Ссылка.ПолучитьОбъект();	
	        Элемент.Удалить();
		КонецЕсли;
	КонецЦикла;
	         
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Уведомление(ТекстСообщения) Экспорт
	
	Результат = Истина;
	
	Соединение = Новый HTTPСоединение("api.telegram.org",443,,,,, Новый ЗащищенноеСоединениеOpenSSL);
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	Токен = Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить();
	АдресРесурса = "/bot" + Токен + "/sendMessage"; 
	Запрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
	ДанныеДляОтправки = Новый Структура;
	ИдентификаторГруппы = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить();
	ДанныеДляОтправки.Вставить("chat_id", ИдентификаторГруппы);
	ДанныеДляОтправки.Вставить("text", ТекстСообщения);
	
	Тело = ЗаписатьЗначениеJSON(ДанныеДляОтправки);
	Запрос.УстановитьТелоИзСтроки(Тело, КодировкаТекста.UTF8);
	
	Попытка
		
		//Ответ = Соединение.ОтправитьДляОбработки(Запрос);
		Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
		
		Если Ответ.КодСостояния <> 200 Тогда 
			ЗаписьЖурналаРегистрации("УведомленияВТелеграм.Ошибка", УровеньЖурналаРегистрации.Ошибка,,, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Результат = Ложь;
		КонецЕсли;
		
	Исключение
		
		ЗаписьЖурналаРегистрации("HTTPЗапрос.Ошибка", УровеньЖурналаРегистрации.Ошибка,,, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Результат = Ложь;
		
	КонецПопытки; 
	
	Возврат Результат;
	
КонецФункции 

#КонецОбласти
